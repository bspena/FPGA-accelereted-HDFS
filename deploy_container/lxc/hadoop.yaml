# Image section: describe image output
image:
  name: hadoop_image
  distribution: ubuntu
  release: jammy
  architecture: x86_64

# Source section in order to create an image
source:
  downloader: debootstrap
  same_as: gutsy
  url: http://archive.ubuntu.com/ubuntu
  keyserver: keyserver.ubuntu.com
  keys:
  - 0x790BC7277767219C42C86F933B4FE6ACC0B21F32
  - 0xf6ecb3762474eda9d21b7022871920d1991bc93c

# Section for targets configuration
targets:
  lxc:
    config:
    - type: all
      before: 5
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/ubuntu.common.conf

    - type: user
      before: 5
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/ubuntu.userns.conf

    - type: all
      after: 4
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/common.conf

    - type: user
      after: 4
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/userns.conf

    - type: all
      content: |-
        lxc.arch = {{ image.architecture_personality }}

# Section to manage files
files:
  - path: /etc/hostname
    generator: hostname

  - path: /etc/hosts
    generator: hosts

  - path: /etc/resolvconf/resolv.conf.d/original
    generator: remove

  - path: /etc/resolvconf/resolv.conf.d/tail
    generator: remove

  - path: /etc/machine-id
    generator: dump

  - path: /etc/user/profile
    generator: copy
    source: /etc/profile

  - path: /var/lib/dbus/machine-id
    generator: remove

  - path: /etc/netplan/10-lxc.yaml
    generator: dump
    content: |-
      network:
        version: 2
        ethernets:
          eth0:
            dhcp4: true
            dhcp-identifier: mac
    releases:
    # - bionic
    # - eoan
    # - focal
    # - groovy
    # - hirsute
    # - impish
    - jammy
    types:
    - container
    variants:
    - default

  - path: /etc/netplan/10-lxc.yaml
    generator: dump
    content: |-
      network:
        version: 2
        ethernets:
          enp5s0:
            dhcp4: true
            dhcp-identifier: mac
    releases:
    # - bionic
    # - eoan
    # - focal
    # - groovy
    # - hirsute
    # - impish
    - jammy
    types:
    - vm
    variants:
    - default

  - name: meta-data
    generator: cloud-init
    variants:
    - cloud

  - name: network-config
    generator: cloud-init
    variants:
    - cloud

  - name: user-data
    generator: cloud-init
    variants:
    - cloud

  - name: vendor-data
    generator: cloud-init
    variants:
    - cloud

  - name: ext4
    generator: fstab
    types:
    - vm

  # - name: incus-agent
  #   generator: incus-agent
  #   types:
  #   - vm

  # - path: /etc/default/grub.d/50-incus.cfg
  #   generator: dump
  #   content: |-
  #     GRUB_RECORDFAIL_TIMEOUT=0
  #     GRUB_TIMEOUT=0
  #     GRUB_CMDLINE_LINUX_DEFAULT="${GRUB_CMDLINE_LINUX_DEFAULT} console=tty1 console=ttyS0"
  #     GRUB_TERMINAL=console
  #   types:
  #   - vm

  # - path: /etc/sudoers.d/90-incus
  #   generator: dump
  #   mode: 0440
  #   content: |-
  #     # User rules for ubuntu
  #     ubuntu ALL=(ALL) NOPASSWD:ALL
  #   variants:
  #     - default

# Section for package management
packages:
  manager: apt
  update: true
  cleanup: true
  sets:
  - packages:
    - fuse
    - language-pack-en
    - openssh-client
    - vim
    action: install

  - packages:
    - cloud-init
    action: install
    variants:
    - cloud

  - packages:
    - acpid
    action: install
    architectures:
    - amd64
    #- arm64
    types:
    - vm

  - packages:
    - grub-efi-amd64-signed
    - shim-signed
    action: install
    architectures:
    - amd64
    types:
    - vm

  # - packages:
  #   - grub-efi-arm64-signed
  #   action: install
  #   architectures:
  #   - arm64
  #   types:
  #   - vm

  # - packages:
  #   - shim-signed
  #   action: install
  #   architectures:
  #   - arm64
  #   releases:
  #   - disco
  #   - eoan
  #   - focal
  #   - groovy
  #   - hirsute
  #   - impish
  #   - jammy
  #   types:
  #   - vm

  - packages:
    - linux-virtual
    action: install
    releases:
    # - bionic
    # - eoan
    # - focal
    # - groovy
    # - hirsute
    # - impish
    - jammy
    types:
    - vm

  - packages:
    - os-prober
    action: remove
    types:
    - vm

  repositories:
  - name: sources.list
    url: |-
      deb http://archive.ubuntu.com/ubuntu {{ image.release }} main restricted universe multiverse
      deb http://archive.ubuntu.com/ubuntu {{ image.release }}-updates main restricted universe multiverse
      deb http://security.ubuntu.com/ubuntu {{ image.release }}-security main restricted universe multiverse
    architectures:
    - amd64
    #- i386

  # - name: sources.list
  #   url: |-
  #     deb http://ports.ubuntu.com/ubuntu-ports {{ image.release }} main restricted universe multiverse
  #     deb http://ports.ubuntu.com/ubuntu-ports {{ image.release }}-updates main restricted universe multiverse
  #     deb http://ports.ubuntu.com/ubuntu-ports {{ image.release }}-security main restricted universe multiverse
  #   architectures:
  #   - armhf
  #   - arm64
  #   - powerpc
  #   - powerpc64
  #   - ppc64el
  #   - riscv64

# Section relatewd to script that are to be run after certain steps during the building process
actions:
  # Disable suggests/recommends
  - trigger: post-update
    action: |-
      #!/bin/sh
      set -eux

      echo APT::Install-Recommends "0"\; > /etc/apt/apt.conf.d/10disableextras
      echo APT::Install-Suggests "0"\; >>  /etc/apt/apt.conf.d/10disableextras
    variants:
    - default

  # Create user account
  - trigger: post-update
    action: |-
      #!/bin/sh
      set -eux

      rm -f /var/log/faillog /var/log/lastlog \
      && groupadd --non-unique -g 1000 spena \
      && useradd -g 1000 -u 1000 -k /root -m -s /bin/bash spena -d /home/spena \
      && echo "spena ALL=NOPASSWD: ALL" > "/etc/sudoers.d/hadoop-image-1000"

      #getent group sudo >/dev/null 2>&1 || groupadd --system sudo
      #useradd --create-home -s /bin/bash -G sudo -U spena
    variants:
    - default

  # Enable systemd-networkd
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      systemctl enable systemd-networkd
    releases:
    # - bionic
    # - eoan
    # - focal
    # - groovy
    # - hirsute
    # - impish
    - jammy

  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      # Make sure the locale is built and functional
      locale-gen en_US.UTF-8
      update-locale LANG=en_US.UTF-8

      # Cleanup underlying /run
      mount -o bind / /mnt
      rm -rf /mnt/run/*
      umount /mnt

      # Cleanup temporary shadow paths
      rm /etc/*-

  - trigger: post-files
    action: |-
      #!/bin/sh
      set -eux

      TARGET="x86_64"
      [ "$(uname -m)" = "aarch64" ] && TARGET="arm64"

      update-grub
      grub-install --uefi-secure-boot --target="${TARGET}-efi" --no-nvram --removable
      update-grub
      sed -i "s#root=[^ ]*#root=${DISTROBUILDER_ROOT_UUID}#g" /boot/grub/grub.cfg
    types:
    - vm

  # Install common dependencies from packages
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      apt-get -q update \
      && apt-get -q install -y --no-install-recommends \
          apt-utils bats build-essential bzip2 clang cmake curl doxygen fuse g++ gcc git gnupg-agent \
          libbz2-dev libcurl4-openssl-dev libfuse-dev libprotobuf-dev libprotoc-dev libsasl2-dev \
          libsnappy-dev libssl-dev libsnappy-dev libtool \
          #libzstd1-dev \
          #locales \
          pinentry-curses pkg-config python3 python3-pip python3-pkg-resources \
          python3-setuptools python3-wheel rsync shellcheck software-properties-common sudo valgrind \
          zlib1g-dev ssh pdsh make \
      && apt-get clean \
      && rm -rf /var/lib/apt/lists/*


      apt-get update
      apt-get install -y python3-pip

      pip3 install pylint==2.6.0 python-dateutil==2.8.1

  # Install SpotBugs 4.2.2
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      mkdir -p /opt/spotbugs \
      && curl -L -s -S https://github.com/spotbugs/spotbugs/releases/download/4.2.2/spotbugs-4.2.2.tgz \
        -o /opt/spotbugs.tgz \
      && tar xzf /opt/spotbugs.tgz --strip-components 1 -C /opt/spotbugs \
      && chmod +x /opt/spotbugs/bin/*

  # Install OpenJDK 8
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      apt-get -q update \
      && apt-get -q install -y --no-install-recommends openjdk-8-jdk libbcprov-java \
      && apt-get clean \
      && rm -rf /var/lib/apt/lists/*

  # Install Google Protobuf 3.7.1
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      
      mkdir -p /opt/protobuf-src \
      && curl -L -s -S https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/protobuf-java-3.7.1.tar.gz \
        -o /opt/protobuf.tar.gz \
      && tar xzf /opt/protobuf.tar.gz --strip-components 1 -C /opt/protobuf-src \
      && cd /opt/protobuf-src \
      && ./configure --prefix=/opt/protobuf \
      && make "-j$(nproc)" \
      && make install \
      && cd /root \
      && rm -rf /opt/protobuf-src

  # Install Apache Maven 3.6.0
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      apt-get -q update \
      && apt-get -q install -y --no-install-recommends maven \
      && apt-get clean \
      && rm -rf /var/lib/apt/lists/*

      #pip3 install pylint==2.6.0 python-dateutil==2.8.1

  # Install hadolint
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      curl -L -s -S https://github.com/hadolint/hadolint/releases/download/v1.11.1/hadolint-Linux-x86_64 \
        -o /bin/hadolint \
      && chmod a+rx /bin/hadolint \
      && shasum -a 512 /bin/hadolint | \
        awk '$1!="734e37c1f6619cbbd86b9b249e69c9af8ee1ea87a2b1ff71dccda412e9dac35e63425225a95d71572091a3f0a11e9a04c2fc25d9e91b840530c26af32b9891ca" {exit(1)}'

  # Intel ISA-L 2.29.0
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      mkdir -p /opt/isa-l-src \
      && apt-get -q update \
      && apt-get install -y --no-install-recommends automake yasm \
      && apt-get clean \
      && curl -L -s -S https://github.com/intel/isa-l/archive/v2.29.0.tar.gz \
        -o /opt/isa-l.tar.gz \
      && tar xzf /opt/isa-l.tar.gz --strip-components 1 -C /opt/isa-l-src \
      && cd /opt/isa-l-src \
      && ./autogen.sh \
      && ./configure \
      && make "-j$(nproc)" \
      && make install \
      && cd /root \
      && rm -rf /opt/isa-l-src

  # Hugo static website generator for new hadoop site
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      curl -L -o hugo.deb https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_0.58.3_Linux-64bit.deb \
      && dpkg --install hugo.deb \
      && rm hugo.deb

  # Setup passphraseless ssh
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      mkdir -p /home/spena/.ssh
      ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa \
      && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \
      && chmod 0600 ~/.ssh/authorized_keys

mappings:
  architecture_map: debian

# Section to set environment variables
environment:
  clear_defaults: false
  variables:
    - key: DEBIAN_FRONTEND
      value: noninteractive
    - key: DEBCONF_TERSE
      value: true
    - key: LANG
      value: 'en_US.UTF-8'
    - key: LANGUAGE
      value: 'en_US:en'
    - key: LC_ALL
      value: 'en_US.UTF-8'
    - key: PYTHONIOENCODING
      value: utf-8
    - key: MAVEN_HOME
      value: /usr
    - key: JAVA_HOME
      value: /usr/lib/jvm/java-8-openjdk-amd64
    - key: SPOTBUGS_HOME
      value: /opt/spotbugs
    - key: PROTOBUF_HOME
      value: /opt/protobuf
    - key: PATH
      value: "${PATH}:/opt/protobuf/bin"
    - key: MAVEN_OPTS
      value: -Xms256m -Xmx1536m
    - key: HADOOP_SKIP_YETUS_VERIFICATION
      value: true
    - key: HOME
      value: /home/spena
    - key: HADOOP_HOME
      value: /home/${USER_NAME}/hadoop/hadoop-dist/target/hadoop-3.3.5